name: Build and Push Docker Image

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: self-hosted
    env:
      IMAGE_NAME: harbor.local/example-self-hosted-saas-app/example-self-hosted-saas-app


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Harbor
        run: echo "${{ secrets.HARBOR_SECRET }}" | docker login https://harbor.local -u admin --password-stdin

      - name: Get and increment latest tag
        id: semver
        run: |
          LATEST_TAG=$(git tag --list --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="1.0.0"
          else
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"
            PATCH=$((PATCH + 1))
            NEW_TAG="$MAJOR.$MINOR.$PATCH"
          fi
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "Latest tag: $LATEST_TAG"
          echo "New tag: $NEW_TAG"

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${NEW_TAG} .
          docker tag $IMAGE_NAME:${NEW_TAG} $IMAGE_NAME:latest

      - name: Push Docker image (new tag)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker push $IMAGE_NAME:${NEW_TAG}

      - name: Push Docker image (latest)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker push $IMAGE_NAME:latest

      - name: Install kubectl
        run: |
          KUBECTL_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt)
          echo "Installing kubectl version: ${KUBECTL_VERSION}"
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Run example kubectl command if you don't want to use flux
        run: kubectl get pods -n example-self-hosted-saas-app

      - name: Create and push new git tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG
